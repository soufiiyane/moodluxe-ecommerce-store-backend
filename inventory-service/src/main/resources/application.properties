spring.config.import=file:env.properties

#changes the path of api in all controllers
server.servlet.context-path=/api/v1

#Create database tables by JPA
spring.jpa.hibernate.ddl-auto=update

#connect postgres database
spring.datasource.url=jdbc:postgresql://localhost:5000/inventoryservicedb
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}


#server port
#server.port=8081

server.port=0
#eureka config
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
eureka.instance.prefer-ip-address=true

spring.application.name=inventory-service

#kafka properties
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.template.default-topic=productReserveStockTopic
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=event:com.ayoam.inventoryservice.event.StockReservedEvent

spring.kafka.consumer.group-id= inventoryId
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.type.mapping=event:com.ayoam.inventoryservice.event.ProductStockChangedEvent,OrderPlacedEvent:com.ayoam.inventoryservice.event.OrderPlacedEvent


